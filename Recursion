public static int fibonacci ( int n ) {
    
    if ( n == 0 ) {
        return 0;
    } else if ( n == 1 ){
        return 1;
    }
    return fibonacci(n-1) + fibonacci(n-2);
}

public static int sumDigits (int n) {
    if ( n == 0){
        return 0;   
    }
    return sumDigits(n / 10) + n % 10;
}

public static int powerN (int x, int y){
    if ( y == 0 ){
        return 1;
    }
    
    return x * powerN(x, y-1);
}

public static int count11 ( String s ) {
	if( s.length() < 2 ) {
		return 0;
	} else if( s.substring(0, 2).equals("11") ) {
		return 1 + count11( s.substring(2) );
	}
	return count11( s.substring(1) );
}

public static boolean nestParen ( String s ){
    if (s.equals("")){
        return true;
    }
    if (s.substring(0,1).equals("(") && s.substring(s.length()-1).equals(")") ){
        return nestParen(s.substring(1, s.length()-1));
    }
    return false;
    
}

public static boolean strCopies(String s, String sub, int n){
    if (!s.contains(sub) && n == 0){
        return true;
    }
    if (s.equals("") || !s.contains(sub)){
        return false;
    }
    if (s.contains(sub)){
        if (n == 1){
            return true;
        }
        n--;
        s = s.substring(s.indexOf(sub)+1);
        return strCopies(s, sub, n);
    }
    return false;
}

public static String stringClean (String s){
    if (s.length() <= 1){
        return s;
    }
    if (s.charAt(0) == (s.charAt(1))){
        return stringClean(s.substring(1));
    }
    return s.charAt(0) + stringClean(s.substring(1));
}

public static String endX (String s){
    if (s.equals("")){
        return s;
    }

    if (s.substring(0,1).equals("x")){
      return endX(s.substring(1)) + "x";
    }
    return s.charAt(0) + endX(s.substring(1));
}

public static int array11 (int[] array, int index ){
    if (array.length <= index){
        return 0;
    }
    if (array[index] == 11){
        return 1 + array11(array, index + 1);
    }
    return array11(array, index + 1);
}

public static boolean array220 ( int[] array, int index){
    if (array.length-1 <= index){
        return false;
    }
    if (array[index] * 10 == array[index+1]){
        return true;
    }
    return array220(array, index+1);
}
